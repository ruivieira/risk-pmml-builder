<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<PMML xmlns="http://www.dmg.org/PMML-4_3" xmlns:data="http://jpmml.org/jpmml-model/InlineTable" version="4.3">
	<Header>
		<Application name="JPMML-SkLearn" version="1.5.14"/>
		<Timestamp>2019-06-04T13:20:21Z</Timestamp>
	</Header>
	<MiningBuildTask>
		<Extension>PMMLPipeline(steps=[('regressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=10,
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))])</Extension>
	</MiningBuildTask>
	<DataDictionary>
		<DataField name="dispute_risk" optype="continuous" dataType="double"/>
		<DataField name="amount" optype="continuous" dataType="float"/>
		<DataField name="holder_index" optype="continuous" dataType="float"/>
	</DataDictionary>
	<TransformationDictionary>
		<DerivedField name="double(amount)" optype="continuous" dataType="double">
			<FieldRef field="amount"/>
		</DerivedField>
		<DerivedField name="double(holder_index)" optype="continuous" dataType="double">
			<FieldRef field="holder_index"/>
		</DerivedField>
	</TransformationDictionary>
	<MiningModel functionName="regression">
		<MiningSchema>
			<MiningField name="dispute_risk" usageType="target"/>
			<MiningField name="amount"/>
			<MiningField name="holder_index"/>
		</MiningSchema>
		<Segmentation multipleModelMethod="average">
			<Segment id="1">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction" splitCharacteristic="multiSplit">
					<MiningSchema>
						<MiningField name="amount"/>
						<MiningField name="holder_index"/>
					</MiningSchema>
					<Node score="4.0">
						<True/>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="149.95999908447266"/>
							<Node score="1.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="99.98500061035156"/>
								<Node score="2.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
							</Node>
						</Node>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="200.01499938964844"/>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.5"/>
								<Node score="4.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
									<Node score="3.0">
										<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.11499786376953"/>
									</Node>
								</Node>
							</Node>
						</Node>
						<Node score="5.0">
							<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="1.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="2">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction" splitCharacteristic="multiSplit">
					<MiningSchema>
						<MiningField name="amount"/>
						<MiningField name="holder_index"/>
					</MiningSchema>
					<Node score="4.0">
						<True/>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.17499542236328"/>
							<Node score="1.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="99.95999908447266"/>
								<Node score="2.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								<Node score="2.0">
									<SimplePredicate field="double(amount)" operator="lessOrEqual" value="100.05500030517578"/>
								</Node>
							</Node>
						</Node>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="200.0199966430664"/>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.5"/>
								<Node score="4.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
						</Node>
						<Node score="5.0">
							<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="1.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="3">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction" splitCharacteristic="multiSplit">
					<MiningSchema>
						<MiningField name="amount"/>
						<MiningField name="holder_index"/>
					</MiningSchema>
					<Node score="4.0">
						<True/>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="149.9949951171875"/>
							<Node score="1.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="99.95999908447266"/>
								<Node score="2.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								<Node score="2.0">
									<SimplePredicate field="double(amount)" operator="lessOrEqual" value="100.05500030517578"/>
								</Node>
							</Node>
						</Node>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="199.9749984741211"/>
							<Node score="4.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.5"/>
							</Node>
						</Node>
						<Node score="5.0">
							<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="1.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="4">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction" splitCharacteristic="multiSplit">
					<MiningSchema>
						<MiningField name="amount"/>
						<MiningField name="holder_index"/>
					</MiningSchema>
					<Node score="4.0">
						<True/>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.17499542236328"/>
							<Node score="1.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="99.95500183105469"/>
								<Node score="2.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
							<Node score="4.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								<Node score="2.0">
									<SimplePredicate field="double(amount)" operator="lessOrEqual" value="100.10499954223633"/>
								</Node>
								<Node score="3.0">
									<SimplePredicate field="double(amount)" operator="lessOrEqual" value="149.96499633789062"/>
								</Node>
							</Node>
							<Node score="2.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.01499938964844"/>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.0"/>
							</Node>
						</Node>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="200.11000061035156"/>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.5"/>
								<Node score="4.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
						</Node>
						<Node score="5.0">
							<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="1.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="5">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction" splitCharacteristic="multiSplit">
					<MiningSchema>
						<MiningField name="amount"/>
						<MiningField name="holder_index"/>
					</MiningSchema>
					<Node score="4.0">
						<True/>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="149.9749984741211"/>
							<Node score="1.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="99.95999908447266"/>
								<Node score="2.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								<Node score="2.0">
									<SimplePredicate field="double(amount)" operator="lessOrEqual" value="100.05500030517578"/>
								</Node>
							</Node>
						</Node>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="200.04000091552734"/>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.5"/>
								<Node score="4.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
									<Node score="3.0">
										<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.125"/>
									</Node>
								</Node>
							</Node>
						</Node>
						<Node score="5.0">
							<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="1.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="6">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction" splitCharacteristic="multiSplit">
					<MiningSchema>
						<MiningField name="amount"/>
						<MiningField name="holder_index"/>
					</MiningSchema>
					<Node score="4.0">
						<True/>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.17499542236328"/>
							<Node score="1.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="100.09000015258789"/>
								<Node score="2.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
							<Node score="4.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								<Node score="3.0">
									<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.00999450683594"/>
								</Node>
							</Node>
							<Node score="2.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.09000396728516"/>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.5"/>
							</Node>
						</Node>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="200.0800018310547"/>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.5"/>
								<Node score="4.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
						</Node>
						<Node score="5.0">
							<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="1.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="7">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction" splitCharacteristic="multiSplit">
					<MiningSchema>
						<MiningField name="amount"/>
						<MiningField name="holder_index"/>
					</MiningSchema>
					<Node score="4.0">
						<True/>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.0"/>
							<Node score="1.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="99.95999908447266"/>
								<Node score="2.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								<Node score="2.0">
									<SimplePredicate field="double(amount)" operator="lessOrEqual" value="100.05500030517578"/>
								</Node>
							</Node>
						</Node>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="200.11000061035156"/>
							<Node score="4.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.5"/>
							</Node>
						</Node>
						<Node score="5.0">
							<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="1.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="8">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction" splitCharacteristic="multiSplit">
					<MiningSchema>
						<MiningField name="amount"/>
						<MiningField name="holder_index"/>
					</MiningSchema>
					<Node score="4.0">
						<True/>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="149.95999908447266"/>
							<Node score="1.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="99.95500183105469"/>
								<Node score="2.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								<Node score="2.0">
									<SimplePredicate field="double(amount)" operator="lessOrEqual" value="100.10499954223633"/>
								</Node>
							</Node>
						</Node>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="200.11000061035156"/>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.5"/>
								<Node score="4.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
									<Node score="3.0">
										<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.00999450683594"/>
									</Node>
								</Node>
							</Node>
						</Node>
						<Node score="5.0">
							<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="1.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="9">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction" splitCharacteristic="multiSplit">
					<MiningSchema>
						<MiningField name="amount"/>
						<MiningField name="holder_index"/>
					</MiningSchema>
					<Node score="4.0">
						<True/>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.1699981689453"/>
							<Node score="1.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="99.95999908447266"/>
								<Node score="2.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								<Node score="2.0">
									<SimplePredicate field="double(amount)" operator="lessOrEqual" value="100.10499954223633"/>
								</Node>
							</Node>
							<Node score="2.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.01499938964844"/>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.5"/>
							</Node>
						</Node>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="200.04000091552734"/>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.5"/>
								<Node score="4.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
						</Node>
						<Node score="5.0">
							<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="1.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="10">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction" splitCharacteristic="multiSplit">
					<MiningSchema>
						<MiningField name="amount"/>
						<MiningField name="holder_index"/>
					</MiningSchema>
					<Node score="4.0">
						<True/>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="150.0"/>
							<Node score="1.0">
								<SimplePredicate field="double(amount)" operator="lessOrEqual" value="100.04000091552734"/>
								<Node score="2.0">
									<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
								</Node>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
							</Node>
						</Node>
						<Node score="2.0">
							<SimplePredicate field="double(amount)" operator="lessOrEqual" value="200.0800018310547"/>
							<Node score="4.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="0.5"/>
							</Node>
							<Node score="3.0">
								<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="2.5"/>
							</Node>
						</Node>
						<Node score="5.0">
							<SimplePredicate field="double(holder_index)" operator="lessOrEqual" value="1.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
		</Segmentation>
	</MiningModel>
</PMML>
